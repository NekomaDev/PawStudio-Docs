{
    "/PawStudio-Docs/": {
        "title": "📜 Welcome to LiteQuest",
        "text": "📜 Welcome to LiteQuest LiteQuest is a lightweight and flexible Minecraft plugin for creating and managing quests. It is designed to work efficiently on any Paper-based server and offers both solo an LiteQuest  is a lightweight and flexible Minecraft plugin for creating and managing quests. It is designed to work efficiently on any Paper-based server and offers both solo and group questing experiences. 📌 Key Features Quest-based configuration Each quest is stored as a separate configuration file ( 1 config = 1 quest ). All quest files are located in: plugins/LiteQuest/quests Solo or Group Play Quests can be assigned to one or multiple players, allowing cooperative progression. Optimized Data Loading Quest sessions and player data are loaded only when needed, ensuring high performance. Quest Sessions When a quest is assigned, a dedicated  session  is created: plugins/LiteQuest/sessions Each session stores live quest progress and participant information. Player Data Management Player profiles are stored in: plugins/LiteQuest/players Upon login, the plugin automatically loads the player’s profile along with all active quest sessions. Progress Tracking Players can view their active quests via: /lquest menu The menu displays all active quests and the completion percentage for each participant. Reward System Online players receive rewards immediately upon quest completion. Offline players have their rewards stored in their profile until their next login. 📂 Data Structure Overview plugins/   LiteQuest/     quests/       <- Static quest configurations     sessions/     <- Active quest session data     players/      <- Player profiles"
    },
    "/PawStudio-Docs/documentation/litequest/quest-config/": {
        "title": " 📘 Quest config",
        "text": "📘 Quest config Each file contains: Quest display settings (icon, name, description) Conditions (objectives to complete) Rewards (per-player ranking rewards) Start commands (executed when the quest begins) 📝 Example – Miner Quest (Static) JSON { \n   \"display_item\" : { \n     \"material\" :  \"IRON_PICKAXE\" , \n     \"display_name\" :  \"{#FFE04F}Miner quest!\" , \n     \"lore\" : [ \n       \"{#FFD966}Put your pickaxe to work and show your skills!\" , \n       \"{#FFD966}Mine various stones and gather valuable resources.\" , \n       \"{#FFD966}Complete all tasks to earn great rewards.\" \n     ] \n   }, \n   \"conditions\" : [ \n     { \n       \"display_tip\" :  \"{#FFE04F}Stone\" , \n       \"action\" :  \"BREAK\" , \n       \"target\" :  \"STONE\" , \n       \"amount\" :  \"3\" \n     }, \n     { \n       \"display_tip\" :  \"{#B1B3A5}Andesite\" , \n       \"action\" :  \"BREAK\" , \n       \"target\" :  \"ANDESITE\" , \n       \"amount\" :  \"3\" \n     } \n   ], \n   \"reward\" : { \n     \"start_commands\" :[ \n       \"server_message {#FF8C26}[LiteQuest] {#FF8C26}{#FFFB92}Miner quest has started! {#FF3939}Hurry up!!!\" \n     ], \n     \"rewards\" :{ \n       \"1\" :[ \n          \"plugin_message {#FFE04F}Miner quest {#7AFF5A}completed! \\n §7Reward: \\n  {#FFFC26}⁑ Money: {#FF9601}500$ \\n  {#7AFF5A}⁑ Exp: {#FF9601}250\" , \n          \"money add %player_name% 500\" , \n          \"experience add %player_name% 250\" \n       ], \n       \"2\" :[ \n         \"plugin_message {#FFE04F}Miner quest {#7AFF5A}completed! \\n §7Reward: \\n  {#FFFC26}⁑ Money: {#FF9601}250$ \\n  {#7AFF5A}⁑ Exp: {#FF9601}100\" , \n          \"money add %player_name% 250\" , \n          \"experience add %player_name% 100\" \n       ]  \n     } \n   } \n } 📂 Configuration Section Description display_item Defines how the quest appears in menus. material Item icon for the quest. display_name Colored title of the quest. lore Multi-line description (supports color codes). conditions A list of objectives the player must complete. display_tip Short description shown in the quest progress. action Type of action required ( BREAK , KILL , etc.). target Minecraft material or entity to interact with. amount Quantity required to fulfill the condition. ⚙️ How Rewards Work Rewards are assigned  by position in contribution ranking . Example: The player who completes the largest percentage of the quest objectives gets reward  #1 , the second-most contributing player gets reward  #2 , and so on. Each reward set can contain: Chat messages  ( plugin_message ) Economy commands  ( money add ) Experience commands  ( experience add ) Any custom plugin commands 📢 Notes Global Quests :  start_commands  can be used to send a server-wide notification when a global quest begins. Completion : In this example, players must break  3 Stone  and  3 Andesite  to finish the quest. Color Codes : The  {#HEXCODE}  format is supported for hex colors. Standard Minecraft  §  color codes can also be used. ⚡ Dynamic Quest Configuration Dynamic quests in  LiteQuest  allow  variable objectives  and  scalable rewards  based on each player’s performance. Unlike static quests, where objectives are fixed, dynamic quests use  randomized target amounts  and  per-unit rewards . 📝 Example – Miner Quest (Dynamic) JSON { \n   \"display_item\" : { \n     \"material\" :  \"IRON_PICKAXE\" , \n     \"display_name\" :  \"{#FFE04F}Miner quest!\" , \n     \"lore\" : [ \n       \"{#FFD966}Put your pickaxe to work and show your skills!\" , \n       \"{#FFD966}Mine various stones and gather valuable resources.\" , \n       \"{#FFD966}Complete all tasks to earn great rewards.\" \n     ] \n   }, \n   \"conditions\" : [ \n     { \n       \"display_tip\" :  \"{#B1B3A5}Stone\" , \n       \"action\" :  \"BREAK\" , \n       \"target\" :  \"STONE\" , \n       \"amount\" :  \"1-10\" , \n       \"reward_per_unit\" : { \n         \"money\" :  10 \n       } \n     }, \n     { \n       \"display_tip\" :  \"{#B1B3A5}Andesite\" , \n       \"action\" :  \"BREAK\" , \n       \"target\" :  \"ANDESITE\" , \n       \"amount\" :  \"1-10\" , \n       \"reward_per_unit\" : { \n         \"money\" :  10 , \n         \"exp\" :  5 \n       } \n     } \n   ], \n   \"reward\" : { \n     \"start_commands\" : [ \n       \"server_message {#FF8C26}[LiteQuest] {#FF8C26}{#FFFB92}Miner quest has started! {#FF3939}Hurry up!!!\" \n     ], \n     \"reward_commands\" : [ \n       \"plugin_message {#FFE04F}Miner quest {#7AFF5A}completed! \\n §7Reward: \\n  {#FFFC26}⁑ Money: {#FF9601}%money%$ \\n  {#7AFF5A}⁑ Exp: {#FF9601}%exp%\" , \n       \"money add %player_name% %money%\" , \n       \"experience add %player_name% %exp%\" \n     ], \n     \"reward_map\" : [ \n       \"1 100%\" , \n       \"2-5 50%\" , \n       \"5-10 25%\" \n     ] \n   } \n } 📂 Configuration amount Random range for objective count (e.g.,  \"1-10\"  → random between 1 and 10). reward_per_unit Reward values per unit of the objective completed. reward_commands Commands executed for  all ranked players , using calculated reward values. reward_map Determines  percentage of rewards  for each ranking group (e.g., rank 1 gets 100%, ranks 2–5 get 50%, ranks 5–10 get 25%). ⚙️ How Rewards Are Calculated Determine Objective Amount For each condition, a random number within  amount  range is chosen. Example:  1-10  → the quest may require 7 Stone this time. Track Player Progress Every completed unit adds to the player’s reward calculation using  reward_per_unit . Calculate Base Rewards iniКопироватьРедактироватьTotal_Money = Units_Completed × money_per_unit Total_Exp   = Units_Completed × exp_per_unit Apply Ranking Modifiers Ranking is based on  percentage of total quest completion . Apply percentage from  reward_map  to each player’s  calculated rewards . 📢 Notes Dynamic difficulty  makes each quest unique on every run. reward_per_unit  as placeholders : %money%  and  %exp%  are automatically replaced in  reward_commands  with the calculated totals after applying  reward_map . Flexible scaling  allows easy balancing of rewards for large player groups. 🎯 Quest Event Actions Action Description BREAK Block break PLACE Block place SMELT Furnace smelt (todo) CRAFT Item craft KILL Entity kill TAME Entity tame MILK Milk entity SHEAR Shear entity BREED Breed entity"
    }
}